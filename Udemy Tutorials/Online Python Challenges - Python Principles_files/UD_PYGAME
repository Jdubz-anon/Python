####ADDING AND IMAGE TO WINDOW
import pygame

pygame.init()
screen = pygame.display.set_mode((600,600))

image = pygame.image.load(r'C:\Users\Whois\PycharmProjects\pythonProject\HelloWorld\test4insta.png')

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(color=(255,255,255))
    screen.blit(image,(300,300))
    pygame.display.update()
pygame.quit()
#####ADDING TEXT#####
import pygame

pygame.init()
screen = pygame.display.set_mode((600,600))

font = pygame.font.Font('freesansbold.ttf',32)
text = font.render('hello',True,(0,255,0),(0,0,128))
textRect = text.get_rect()
textRect.center = (450//2,450//2)

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(color=(255,255,255))
    screen.blit(text,textRect)
    pygame.display.update()

pygame.quit()
######KEYBOARD DETECTION####
import pygame

pygame.init()
screen = pygame.display.set_mode((600,600))

running = True
is_blue = True
x = 30
y = 30
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
            is_blue = not is_blue
    pressed  = pygame.key.get_pressed()
    if pressed[pygame.K_UP]: y -= .25
    if pressed[pygame.K_DOWN] : y += .25
    if pressed[pygame.K_LEFT]: x -= .25
    if pressed[pygame.K_RIGHT]: x += .25

    if is_blue:
        color = (0,128,255)
    else:
        color = (255,100,0)
    pygame.draw.rect(screen,color,pygame.Rect(x,y,60,60))
    pygame.display.update()


pygame.quit()
#####DRAWING ON THE SCREEN#####
import pygame

pygame.init()
screen = pygame.display.set_mode((600,600))

white = (255,255,255)
green = (0,255,00)
blue = (0,128,0)
black = (0,0,0)
red = (255,0,0)

pygame.display.set_caption('Drawing Shapes')
screen.fill(white)

pygame.draw.polygon(screen,blue,[(146,0),(291,106),(236,277),(56,277),(0,106)])
pygame.draw.line(screen, green,(65,350),(120,350),4)
pygame.draw.circle(screen, red, (300,50), 20,0)
pygame.draw.ellipse(screen, black,(300,250,40,80),1)
pygame.draw.rect(screen, green, (150,300,100,50))
while  True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
    pygame.display.update()
########JUMPING OBJECT
import pygame

pygame.init()
screen = pygame.display.set_mode((600,600))
pygame.display.set_caption('Jump tutorial')

x = 200
y = 200
width = 30
height = 40

v = 5
m = 1

playing = True
jumping = False

while playing:
    screen.fill((255,255,255))

    pygame.draw.rect(screen, (255,0,0),(x,y,width,height))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            playing = False
    key = pygame.key.get_pressed()
    if jumping == False:
        if key[pygame.K_SPACE]:
            jumping = True
    if jumping:
        f = (1/2)*m*(v**2)
        y -= f
        v = v - 1
        if v < 0:
            m = -1
        if v == -6:
            jumping = False
            v = 5
            m = 1

    pygame.time.delay(10)
    pygame.display.update()
pygame.quit()
######PLAY AUDIO###############
from pygame import mixer

mixer.init()

mixer.music.load('FILE_NAME')
mixer.music.set_volume(1.2)
mixer.music.play()

while True:
    print('Press P to pause the audio')
    print('Press R to resume')

    entry = input('')
    if entry == 'p':
        mixer.music.pause()
    elif entry == 'r':
        mixer.music.unpause()
    elif entry == 'e':
        mixer.music.stop()

########MOVING OBJECT#####
import pygame
pygame.init()
screen = pygame.display.set_mode((600,600))
x= 200
y = 250
vel = 7
width,height = 30,40

playing = True
while playing:
    pygame.time.delay(10)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            playing = False
    keys = pygame.key.get_pressed()
    screen.fill((255,255,255))
    if keys[pygame.K_LEFT] and x > 0:
        x -=  vel
    if keys[pygame.K_RIGHT] and x < 600 - width:
        x += vel
    if keys[pygame.K_UP] and y > 0:
        y -= vel
    if keys[pygame.K_DOWN] and y < 600 - height:
        y += vel
    pygame.draw.rect(screen,(0,255,0),(x,y,width,height))
    pygame.display.update()


pygame.quit()
##########CREATE BOUNDARIES FOR MOVING BALL######
import random

import pygame
pygame.init()
window = pygame.display.set_mode((700,550))
pygame.display.set_caption('PYGAME')

width = 700
height=550

white = (255,255,255)
red = (255,0,0)
green =(0,255,0)
blue = (0,0,255)
black = (0,0,0)

ballX = width / 2 - 12
ballY = height / 2 - 12
Xballmove = .005 * random.choice((1, -1))
Yballmove = .005
ballPixel = 25


playing = True
while playing:
    window.fill(red)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            playing = False
    if ballX + ballPixel >= width or ballX <=0:
        Xballmove *= -1
    if ballY + ballPixel >= height or ballY <= 0:
       Yballmove *= -1

    ballX += Xballmove
    ballY += Yballmove

    ballImg = pygame.draw.circle(window,blue, (int(ballX),int(ballY)),15)
    pygame.display.update()
##########SNOWFALL#######
import pygame
import random

pygame.init()
screen = pygame.display.set_mode((400,400))
white = (255,255,255)
black = (0,0,0)

snowParticles = []
for i in range(50):
    x = random.randrange(0,400)
    y = random.randrange(0,400)
    snowParticles.append([x,y])
clock = pygame.time.Clock()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
    screen.fill(color=black)

    for i in range(50):
        pygame.draw.circle(screen, white, snowParticles[i],2)
        snowParticles[i][1] += 1
        if snowParticles[i][1] > 400:
            y = random.randrange(-50,-10)
            snowParticles[i][1] = y
            x = random.randrange(0,400)
            snowParticles[i][0] = x

    pygame.display.update()
    clock.tick(100)
####BUBBLESORT TECHNIQUE VISUALIZATION#####
import pygame
import random

pygame.init()
screen = pygame.display.set_mode((400,400))
white = (255,255,255)
black = (0,0,0)
width = 20
height = [200,99,150,130,90,62,112,88,33,83,70,158,181,20] #13
x = y = 40

def show(height):
    for i in range(len(height)):
        pygame.draw.rect(screen,black,(x+30 * i,y,width,height[i]))

execute = False

while True:
    pygame.time.delay(10)
    keys = pygame.key.get_pressed()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()


    if keys[pygame.K_SPACE]:
        execute = True
    if execute == False:
        screen.fill(white)
        show(height)
        pygame.display.update()
    else:
        for i in range(len(height)-1):
            for j in range(len(height)-i-1):
                if height[j] > height[j+1]:
                    temp = height[j]
                    height[j] = height[j+1]
                    height[j+1] = temp
                screen.fill(white)
                show(height)
                pygame.time.delay(50)
                pygame.display.update()

